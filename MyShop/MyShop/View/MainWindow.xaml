<Fluent:RibbonWindow x:Class="MyShop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent" xmlns:wpfx="http://schemas.xceed.com/wpf/xaml/toolkit"
                     Title="MainWindow" Height="550" Width="800" WindowState="Normal"
                     Loaded="Window_Loaded"
                     WindowStartupLocation="CenterScreen"
                     Closing="DataWindow_Closing" 
                     Icon="/Images/icon.png" TitleForeground="White" TitleBackground="#365B9D" 
                     ResizeMode="NoResize"
                     >




    <DockPanel LastChildFill="True">
        <Fluent:Ribbon DockPanel.Dock="Top" Panel.ZIndex="0" Name="ribbon" SelectedTabChanged="ribbon_SelectedTabChanged" Background="{x:Null}">

            <Fluent:RibbonTabItem Header="Home" Name="TabHome" >

            </Fluent:RibbonTabItem>

            <Fluent:RibbonTabItem Header="Orders" Name="TabOrders">
                <Fluent:RibbonGroupBox >
                    <Fluent:Button Header="Add"
                                LargeIcon="/Images/plus.png" 
                                   Width="50"
                                   Padding="0,20,0,0"
                                   Height="100"
                                   Click="addNewOrderClick"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:Button Header="Filter"
                                LargeIcon="/Images/Filter.png" 
                                   Width="50"
                                   Padding="0,20,0,0"
                                   Height="100"
                                   Click="filterClick"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:Button Header="Refresh"
                                LargeIcon="/Images/refresh.png" 
                                   Width="50"
                                   Padding="0,20,0,0"
                                   Height="100"
                                   Click="refreshClick"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <Fluent:RibbonTabItem Header="Products" Name="TabProducts">
                <Fluent:RibbonGroupBox>
                    <Fluent:Button Header="Add" Click="addNewProductManager"
                                LargeIcon="/Images/plus.png"
                                   Width="50"
                                   Padding="0,20,0,0"
                                   Height="100"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:Button Header="Filter"
                                LargeIcon="/Images/Filter.png" 
                                   Width="50"
                                   Padding="0,20,0,0"
                                   Height="100"
                                   Click="filterProductByPriceClick"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:Button Header="Refresh"
                                LargeIcon="/Images/refresh.png" 
                                   Width="50"
                                   Padding="0,20,0,0"
                                   Height="100"
                                   Click="refreshClick_Product"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <Fluent:RibbonTabItem Header="Revenue" Name="TabRevenue">
                <Fluent:RibbonGroupBox>
                    <Fluent:DropDownButton Header="Revenue Chart" 
                                LargeIcon="/Images/chart.png" Width="90">
                        <Fluent:MenuItem Header="Date" Click="DateRevenueChart">
                        </Fluent:MenuItem>
                        <Fluent:MenuItem Header="Week" Click="WeekRevenueChart">
                        </Fluent:MenuItem>
                        <Fluent:MenuItem Header="Month" Click="MonthRevenueChart">
                        </Fluent:MenuItem>
                        <Fluent:MenuItem Header="Year" Click="YearRevenueChart">
                        </Fluent:MenuItem>
                    </Fluent:DropDownButton>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:DropDownButton Header="Product Chart" 
                                LargeIcon="/Images/laptop.png" Width="90">
                        <Fluent:MenuItem Header="Date" Click="DateProductChart">
                        </Fluent:MenuItem>
                        <Fluent:MenuItem Header="Week" Click="WeekProductChart">
                        </Fluent:MenuItem>
                        <Fluent:MenuItem Header="Month" Click="MonthProductChart">
                        </Fluent:MenuItem>
                        <Fluent:MenuItem Header="Year" Click="YearProductChart">
                        </Fluent:MenuItem>
                    </Fluent:DropDownButton>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

        </Fluent:Ribbon>

        <Canvas DockPanel.Dock="Top" Panel.ZIndex="1000" Height="587" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=TabHome}">
            <Canvas.Background>
                <LinearGradientBrush>
                    <GradientStop Color="#7be9f6" Offset="0.0"/>
                    <GradientStop Color="#f083da" Offset="1"/>
                </LinearGradientBrush>
            </Canvas.Background>
            <Label FontSize="30"  FontWeight="Bold" Content="{Binding ordersInWeek}" ContentStringFormat="Orders in week : {0}" Canvas.Left="32" Canvas.Top="185" Width="309" Height="60"/>
            <Label FontSize="30" FontWeight="Bold" Content="{Binding ordersInMonth}" ContentStringFormat="Orders in month : {0}" Canvas.Left="32" Canvas.Top="280" Width="309" Height="60"/>

            <Label FontSize="30" FontWeight="Bold" Content="{Binding totalProduct}" ContentStringFormat="Total product : {0}" Canvas.Left="32" Width="309" Height="60" Canvas.Top="90"/>
            <TextBlock FontSize="40" FontWeight="Bold" Text="Top 5 Products" Canvas.Left="544" Canvas.Top="17" Width="107"/>
            <ListView Name ="topProductsList"  Width="390" Height="250" Canvas.Left="400" Canvas.Top="90">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding Image}" Width="50" Height="50"/>
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Canvas>
        <Canvas DockPanel.Dock="Top" Panel.ZIndex="1000" Height="582" Visibility="{Binding IsSelected,Converter={StaticResource BooleanToVisibilityConverter}, ElementName=TabOrders}">
            <Canvas.Background>
                <LinearGradientBrush>
                    <GradientStop Color="#7be9f6" Offset="0.0"/>
                    <GradientStop Color="#f083da" Offset="1"/>
                </LinearGradientBrush>
            </Canvas.Background>
            <StackPanel Orientation="Vertical" Width="800"  >
                <Grid VerticalAlignment="Center" >
                    <DataGrid Name="orderDateGrid"
                      VerticalAlignment="Center" ColumnWidth="*" 
                      CanUserResizeColumns="False" 
                      IsReadOnly="True" 
                      AutoGenerateColumns="False"
                      MouseDoubleClick="viewDetailOrderClick">
                        <DataGrid.Columns>

                            <DataGridTextColumn  Header="OrderID" Width="*" Binding="{Binding OrderID}" />
                            <DataGridTextColumn Header="CreateDate" Width="*" Binding="{Binding OrderDate , StringFormat={}{0:MM/dd/yyyy}}" />
                            <DataGridTextColumn Header="Total" Width="*" Binding="{Binding OrderTotal}" />

                        </DataGrid.Columns>

                        <DataGrid.ContextMenu >
                            <ContextMenu>
                                <MenuItem Header="Delete" Click="deleteOrderClick"/>
                                <MenuItem Header="Edit"  Click="editOrderClick"  />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                </Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,0">
                    <Button x:Name="previousOrderButton" Width="80" Height="35" Content="&lt;" Click="prevOrderButton_Click" Background="White">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <TextBlock Name="currentOrderPagingTextBlock" Width="80" Text="0/0" TextAlignment="Center" VerticalAlignment="Center"/>
                    <Button x:Name="nextOrderButton" Width="80" Height="35" Content="&gt;" Click="nextOrderButton_Click" Background="White">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                </StackPanel>
            </StackPanel>
        </Canvas>

        <DockPanel Visibility="{Binding IsSelected,Converter={StaticResource BooleanToVisibilityConverter}, ElementName=TabProducts}" Height="419">
            <StackPanel Margin="30 0 0 0" Height="385">
                <ComboBox SelectionChanged="categoriesComboBox_SelectionChanged"  Name="categoriesComboBox" Width="100" Height="35" Canvas.Left="10" Canvas.Top="63">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <TextBlock FontSize="15" HorizontalAlignment="Right">
                                <Run Foreground="DodgerBlue" FontWeight="Bold" Text="Quantity per page :"/>
                                 <wpfx:IntegerUpDown x:Name="rowperpage"                                     
                                       Width="50" Value="10" Increment="1" Minimum="1" ValueChanged="rowperpage_ValueChanged">
                                 </wpfx:IntegerUpDown>
                    <Button Name="viewProduct" Content="View" Width="40"  Height="25" Click="viewProduct_Click"/>
                </TextBlock>
                <ListView x:Name="productsListView" Width="500" Height="250" Canvas.Left="156" Canvas.Top="17">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete" Click="deleteItem_Click"/>
                                        <MenuItem Header="Edit" Click="editItem_Click"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image Source="{Binding Image}" Width="50" Height="50"/>
                                <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button x:Name="previousButton" Width="80" Height="35" Content="&lt;" Click="prevButton_Click"/>
                    <TextBlock Name="currentPagingTextBlock" Width="80" Text="0/0" TextAlignment="Center" VerticalAlignment="Center"/>
                    <Button x:Name="nextButton" Width="80" Height="35" Content="&gt;" Click="nextButton_Click"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="25 0 10 0" Height="186">
                <Button Name="loadExcelFile"  Content="Load Excel File..." Width="100" Height="35" Click="loadExcelFile_Click" Margin="0 0 0 20"/>
            </StackPanel>
        </DockPanel>

        <Canvas DockPanel.Dock="Top" Panel.ZIndex="1000" Height="582" Visibility="{Binding IsSelected,Converter={StaticResource BooleanToVisibilityConverter}, ElementName=TabRevenue}">
            <Canvas.Background>
                <LinearGradientBrush>
                    <GradientStop Color="#7be9f6" Offset="0.0"/>
                    <GradientStop Color="#f083da" Offset="1"/>
                </LinearGradientBrush>
            </Canvas.Background>
            <DockPanel Height="300">
                <StackPanel Orientation="Horizontal">

                    <lvc:CartesianChart Margin="30,0,0,0"  Name="RevenueChart" Height="300" Width="700"
                                    LegendLocation="Bottom"
                                        Foreground="Black"
                                        >
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis Name="axisLabel" Title="Date" 
                                      Foreground="Black"
                                      />
                        </lvc:CartesianChart.AxisX>
                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Foreground="Black" />
                        </lvc:CartesianChart.AxisY>
                    </lvc:CartesianChart>
                </StackPanel>
            </DockPanel>
        </Canvas>

    </DockPanel>

</Fluent:RibbonWindow>
